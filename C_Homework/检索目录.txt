/*1.3显示Programming in C is fun!*/
#include<stdio.h>
int main(viod)
{
	printf("Programming in C is fun!");
	return 0;
}
/*1.4显示*号图案*/
#include<stdio.h>
int main(void)
{
	printf("****\n***\n**\n*");
	return 0;
}
/*2.1.5输入一个三位正整数，求解并输出该数的个位数、十位数和百位数*/
#include<stdio.h>
int main(void)
{
	int num;
	scanf("%d",&num);
	printf("%d %d %d",num%10,num%100/10,num/100);
	return 0;
}

/*2.2.3求存款到期利息*/
#include<stdio.h>
#include<math.h>
int main(viod)
{
	int year;
	double money,rate,interest;
	printf("Enter money, year and rate: ");
	scanf("%lf%d%lf",&money,&year,&rate );//若错写成%if，可以运行，interest结果不对，原因不明
	interest=money*pow((1+rate),year)-money;
	printf("interest=%.2lf",interest);
	return 0;
}

/*2.2.4求分段函数的值*/
#include<stdio.h>
#include<math.h>
int main(void)
{
	double x,y;
	printf("Enter x: ");scanf("%lf",&x);
	if(x<0) y=pow((x+1),2)+2*x+1/x; else y=sqrt(x);
	printf("f(%.2f)=%.2f",x,y);
	return 0;
}
/*2.2.6求两个整数的和、差、积、商与余数*/
#include<stdio.h>
int main(viod)
{
	int num1,num2;
	printf("Enter num1: ");
	scanf("%d",&num1);
	printf("Enter num2: ");
	scanf("%d",&num2);
	printf("%d+%d=%d\n",num1,num2,num1+num2);
    printf("%d-%d=%d\n",num1,num2,num1-num2);
	printf("%d*%d=%d\n",num1,num2,num1*num2);
	float shang,temp;
	temp=num1*1.0;
	shang=temp/num2;
	printf("%.0f/%d=%.2f\n",temp,num2,shang);
	printf("%d%%%d=%d\n",num1,num2,num1%num2);//使用两个%，结果为输出一个%
	return 0;
}



/*2.2.7计算并输出旅途时间*/
#include<stdio.h>
int main(void)
{
	int time1,time2,hours,minutes,temp;
	printf("Enter time1:");scanf("%d",&time1);
	printf("Enter time2:");scanf("%d",&time2);
	//下面的判断语句无意义，因为测试数据有误，出现出发时间晚于到达时间的情况，故当这种情况出现时，交换time1、time2的值
	if (time1>time2)
	{
		temp=time1;
		time1=time2;
		time2=temp;
	}
	hours=time2/100-time1/100;
	minutes=time2%100-time1%100;
    if (minutes<0)
	{
		minutes=minutes+60;
		hours--;//x--类比于x++;
	}
	printf("The train journey time is %d hours %d minutes",hours,minutes);
	return 0;
}
/*2.2.9计算三个整数的平均值*/
#include<stdio.h>
int main(viod)
{
	int a,b,c;
	double ave;
	printf("Input 3 integers: ");
	scanf("%d%d%d",&a,&b,&c);//如果写成"%d","%d","%d"，会发生严重错误，原因不明
	ave=(a+b+c)/(3.0);
	//printf("%d %d %d",a,b,c);//测试用
	printf("average=%.2f",ave);//如果写成&ave，输出的值不对，其意义不明
	return 0;
	}
	/*2.3.3求m到n的（m-n+1）项正整数的倒数之和*/
#include<stdio.h>
int main(void)
{
	int m,n,i;
    double sum=0;
	printf("Enter m: ");scanf("%d",&m);
    printf("Enter n: ");scanf("%d",&n);
    if (m>n )return 0;//防止死循环
	for(i=m;i<=n;i++) sum=sum+1/(double)(i);
    printf("sum=%.3f",sum);
	return 0;
}
/*2.3.5求1-1/4+1/7-1/10+1/13-1/16+…的前n 项之和*/
#include<stdio.h>
#include<math.h>
int main(void)
{
	double sum;
	int i,n;
	sum=0;
	printf("Enter n: ");scanf("%d",&n);
	for(i=1;i<=n;i=i+1)
	{
		sum=sum+(1/(double)(-2+3*i))*pow(-1,i+1);
	}
	printf("sum=%.3f",sum);//如果sum忘了指出，返回0
	return 0;
}
/*2.3.8求x的n次方,不允许调用pow()*/
#include<stdio.h>
int main(void)
{
	int i,n;
	double x,sum=1;
	printf("Enter x: ");scanf("%lf",&x);
    printf("Enter n: ");scanf("%d",&n);
    if (x<=0) return 0;//防止n小于0引起死循环
    for(i=1;i<=n;i++)  sum=sum*x;
	printf("result=%.0f",sum);//题目所给的输出样式有误
	return 0;
}
/*2.4.1求3的0次幂~3的n次幂的值*/
#include<stdio.h>
#include<math.h>
int main(void)
{
	int n,i;
	printf("Enter n: ");scanf("%d",&n);
    for(i=0;i<=n;i++) printf("pow(3,%d)=%.0f\n",i,pow(3,i));
	return 0;
}
/*2.4.4求正整数100到1000的正平方根之和*/
#include<stdio.h>
#include<math.h>
int main(void)
{
	int i;
	double sum;
	sum=0;
	for(i=100;i<=1000;i++) sum=sum+sqrt(i);
	printf("sum=%.2f",sum);
	return 0;
}
/*2.4.5计算还款年限-月还款额*/
#include<stdio.h>
#include<math.h>
int main(void)
{
	int month,year;
	double loan,rate,money;
	printf("Enter loan: ");scanf("%lf",&loan);
	printf("Enter rate: ");scanf("%lf",&rate);
	for(year=5;year<=30;year++)
	{
		month=12*year;
		money=loan*rate*pow((1+rate),month)/(pow((1+rate),month)-1);
		printf("money(%.0f,%d)=%.0f\n",loan,year,money);
	}

	return 0;
	
}
/*3.2.1求某月的天数*/
#include<stdio.h>
int main(viod)
{
	int month;
	printf("Input a month: ");scanf("%d",&month);
	switch(month)
	{
		case 1 :
		case 3 :
		case 5 :
	    case 7 :
		case 8 :
		case 10 :
		case 12:
			printf("month %d has 31 days",month);break;
		case 2 :
			printf("month %d has 28 days",month);break;
		case 4 :
	    case 6 :
		case 9 :	
		case 11 :
			printf("month %d has 30 days",month);break;
		default :
			printf("wrong month");
	}
	return 0;
}

/*3.2.2求满足abcd=(ab+cd)2的数*/
#include<stdio.h>
int main(viod)
{
	int abcd,ab,cd;
	for(abcd=1000;abcd<=9999;abcd++)
	{
		ab=abcd/100;
		cd=abcd%100;
		if (abcd==(ab+cd)*(ab+cd)) printf("%6d",abcd);
	}
	
	return 0;
}
/*3.2.3求100~1000之间满足各位数字之和是5的所有数*/
#include<stdio.h>
int main(viod)
{
	int abc,a,b,c,count=0;
	for(abc=100;abc<1000;abc++)
	{
		a=abc/100;
		b=(abc/10)%10;
		c=abc%10;
		if (a+b+c==5)
		{
		    count++;
			printf("%4d",abc);
		}
	}
	printf("\nthere are %d numbers",count);
	return 0;
}
/*3.2.4虫子吃苹果*/
#include<stdio.h>
int main(viod)
{
	int apple1,apple2,hour,i;
	float apple,speed;
    scanf("%d %f %d",&apple1,&speed,&hour);
	apple=(float)(apple1);
	speed=1.0/speed;//由speed小时吃掉一个苹果转换为一小时吃掉speed个苹果
	for(i=1;i<=hour;i++) apple=apple-speed;
	apple2=0;
	for(i=1;i<=(apple1);i++)
	{
		if ((float)(i)>=apple) 
		{
			apple2=i-1;
		    break;
		}
	}
	printf("%d",apple2);	
	return 0;
}
/*3.3统计字符个数*/
#include<stdio.h>
#include<stdbool.h>
int main(void)
{
	int i,letter=0, blank=0, digit=0, other=0;
	char ch;
	bool flag;
	printf("Input 10 characters: ");
	for (i=1;i<=10;i++)
	{
		ch=getchar();
		/*数据输入的方法为连续输入十个字符，再输入回车（如"123%%%aaa?/n"，
		程序继续运行，并依次读入123***aaa?，/n作为第11个字符并没有被读入，
		但是如果存在第11次读入，/n作为第11个字符被读入。如果输入"123%%%/n"，
		程序在输入/n继续运行，并读入7个字符（/n作为第7个），程序暂停，等待输
		入其余的字符*/
		flag=false;
		if (ch>='0' && ch<='9')  
		//单个字符用''括起来，如'A'，如果用""括起来，如"A"，会被认为是字符串类型，'A'与"A"不相等
		{
			digit++;
			flag=true;
		}
		if (ch==' ')  
		{
			blank++;
			flag=true;
		}
		if ((ch>='A' && ch<='Z') || (ch>='a' && ch<='z'))  
		{
			letter++;
			flag=true;
		}
		if (! flag) other++;
	}
	
	printf("letter=%d, blank=%d, digit=%d, other=%d",letter, blank, digit, other);

	return 0;
}
/*3.4计算等级分*/
#include<stdio.h>
int main(void)
{
	char level;
	printf("Input Grade: ");scanf("%c",&level);
	switch(level)
	{
		case 'A':printf("A is 90-100");break;
        case 'B':printf("B is 80-89");break;
	    case 'C':printf("C is 70-79");break;
		case 'D':printf("D is 60-69");break;
		case 'E':printf("E is 0-59");break;
		default:printf("error");break;
	}
	
	return 0;
}
/*3.5判断某一年是否为闰年*/
#include<stdio.h>
int main(void)
{
	int year;
	printf("Input a year: ");scanf("%d",&year);
	if (year%400==0) 
	{
		printf("%d is a leap year.",year);
		return 0;
	}
	if (year%4==0&&year%100!=0) 
	{
		printf("%d is a leap year.",year);
		return 0;
	}
	printf("%d is not a leap year.",year);
	return 0;
}
/*3.7计算三角形周长和面积*/
#include<stdio.h>
#include<math.h>
int main(void)
{
    int a,b,c;
	double s,area,perimeter;
	printf("Enter 3 sides of the triangle: ");scanf("%d %d %d",&a,&b,&c);	
	if (!(a+b>c && a+c>b &&	b+c>a)) //条件弄反了，懒得改代码了，直接取非
	{
		printf("These sides do not correspond to a valid triangle");
	}
	else
	{
		s=(a+b+c)/2.0;
		area=sqrt(s*(s-a)*(s-b)*(s-c));
		perimeter=a+b+c;
		printf("area=%.2f; perimeter=%.2f",area,perimeter);
	}
		
	return 0;
}
/*3.8计算个人所得税*/
#include<stdio.h>
int main(void)
{
	float rate;
	double salary,tax;
	printf("Enter the salary: ");scanf("%lf",&salary);
	if (salary<=850) rate=0;
	if (salary>850 && salary<=1350) rate=0.05;
	if (salary>1350 && salary<=2850) rate=0.1;
	if (salary>2850 && salary<=5850) rate=0.15;
	if (salary>5850) rate=0.2;	
	tax=(salary-850)*rate;
	printf("tax=%.2f",tax);
	return 0;
}
/*3.9统计等级分个数*/
#include<stdio.h>
int main(void)
{
	int A=0,B=0,C=0,D=0,E=0,i,n,grade;
	printf("Enter n:");scanf("%d",&n);
	for(i=1;i<=n;i++)
	{
		printf("Enter grade %d:",i);scanf("%d",&grade);
		if (grade>=90 &&grade<=100) A++;
		if (grade>=80 &&grade<=89) B++;
		if (grade>=70 &&grade<=79) C++;
		if (grade>=60 &&grade<=69) D++;
		if (grade>=0 &&grade<=59) E++;
	}
	printf("The number of A(90~100):%d",A);
	printf("\nThe number of B(80~89):%d",B);
	printf("\nThe number of C(70~79):%d",C);
	printf("\nThe number of D(60~69):%d",D);
	printf("\nThe number of E(0~59):%d",E);
	return 0;
}
/*4.1求一批整数的最小值*/
#include<stdio.h>
int main(void)
{
	int n,i,min,num;
	printf("Input n: ");scanf("%d",&n);
	printf("Input numbers: ");
	scanf("%d",&min);//输入数据之间用空格，读入时却能自动以这些空格为分割符，搞不懂~
	i=1;
	while (i<n)
	{
		scanf("%d",&num);
		if (num<min) min=num;
		i++;
	}
	printf("min=%d",min);
	return 0;
}
/*4.10求200以内的完数*/
//直接写有点烦，决定用自定义函数
#include<stdio.h>
int main(void)
{
	int i,j,sum;
	for(i=1;i<=200;i++)
	{
		sum=0;
		if(i==1) sum=sum+1;
	    for(j=1;j<i;j++)  if(i%j==0) sum=sum+j;
		if(sum==i) 
		{
			printf("%d ",i);
		}
		
	}
	return 0;
}







/*4.2求a +aa +aaa +aa…a(n 个a) 之和*/
#include<stdio.h>
int main(void)
{
	int a,n,s=0,i,num=0;
	printf("Input a, n: ");scanf("%d %d",&a,&n);
	for(i=1;i<=n;i++)
	{
		num=num+a;
		a=a*10;
		s=s+num;
	}
	printf("s=%d",s);
	return 0;
}
//以下是之前想的一个方法，同样正确但算法不是很好。
/*int main(void)
{
	int s,n,a,i,j,temp,power;
	printf("Input a, n: ");scanf("%d %d",&a,&n);
	s=0;
	for(i=n;i>=1;i--)
	{
		temp=a*i;
		power=1;
		j=1;
		while(j<=(n-i))//用for循环不好做，因为无论怎样for都会执行至少一次循环
		{
			power=power*10;
			j++;
		}//用对power的循环计算代替了pow(10,n-i)
		s=s+temp*power;
	}
	printf("s=%d",s);
	
	return 0;
}
//买表！骗老子说不用pow会更简单！简单你妹！*/
/*4.3自由落体运动――求第n次反弹落地经过的路程与第n次反弹高度*/
#include<stdio.h>
int main(void)
{
    int n,i;
	double height,distance=0;
	printf("Input height: ");scanf("%lf",&height);
	printf("Input n: ");scanf("%d",&n);
	distance=0;
	i=1;
	while(i<=n)
	{
		distance=distance+1.5*height;
		height=height/2;
		i++;
	}//每次小球处在最高点的状态
	distance=distance+height;//小球最后一次落地的状态
	printf("distance=%.1f\n",distance);
	printf("height=%.1f",height);
	return 0;
}

/*4.4求m和n之间的所有素数*/
#include<stdio.h>
int main(void)
{
    int m,n,i,j,flag,count=0;
	printf("Input m: ");scanf("%d",&m);
	printf("Input n: ");scanf("%d",&n);
	if(m<=1) m=2;//2是最小的素数
	for(i=m;i<=n;i++)
	{
		flag=-1;
		for(j=2;j<=i/2;j++)
		{
			if (flag==1) break;
			else 
			{
				if(i%j==0) flag=1;
			}
			
		}
		if (flag==-1 )
		{
			count++;
			if (count!=0 && count%6==0) printf("%4d\n",i);
			else printf("%4d",i);
	        
		}
	}
	return 0;
}

/*4.5水仙花数*/
#include<stdio.h>
int main(void)
{
	int m,n,abc,a,b,c;
	printf("Input m: ");scanf("%d",&m);
    printf("Input n: ");scanf("%d",&n);
	for (abc=m;abc<=n;abc++)
	{
		a=abc/100;
		b=(abc/10)%10;
		c=abc%10;
		if((a*a*a+b*b*b+c*c*c)==abc) printf("%d\n",abc);
	}
	return 0;
}
/*4.6输入一个整数，将其逆序输出*/
#include<stdio.h>
int main(void)
{
	int num;
	printf("Enter x: ");scanf("%d",&num);
	if(num<0)
	{
		printf("-");
		num=-num;
	}
	while(num!=0)
	{
		printf("%d",num%10);
		num=num/10;
	}
	return 0;
}
/*4.7输入一个整数，求它的各位数字之和及位数*/
#include<stdio.h>
int main(void)
{
	int num,count=0,sum=0;
	printf("Input an integer: ");scanf("%d",&num);
	if(num<0) num=-num;
	while(num!=0)
	{
		count++;
		sum=sum+num%10;
		num=num/10;
	}
	printf("count=%d, sum=%d",count,sum);
	return 0;
}
/* 4.8输入一个正整数n，输出2/1+3/2+5/3+8/5 +…的前n 项之和*/
#include<stdio.h>
int main(void)
{
	int n,fenmu,fenzi,temp,i;//尼玛英语不好害死人~
	double sum;
	printf("Input n: ");scanf("%d",&n);	
	fenmu=1;
	fenzi=2;
	sum=2;
	for(i=2;i<=n;i++)
	{
		temp=fenzi;
		fenzi=fenzi+fenmu;
		fenmu=temp;
		sum=sum+(double)(fenzi)/(double)(fenmu);
	}
	printf("s=%.2f",sum);
	return 0;
}
/*4.9输入两个正整数，求其最大公约数和最小公倍数*/
#include<stdio.h>
int main(void)
{
	int n,m,i,temp,lcm,gcd;
	printf("Input two integers: ");scanf("%d %d",&n,&m);
	if(n<m) 
	{
		temp=n;
		n=m;
		m=temp;
	}//保证n大于m
	for(i=m;i>=1;i--)//求最大公约数gcd
	{
		if(n%i==0 && m%i==0)
		{
			gcd=i;
			break;
		}
	}
	for(i=n;i<=n*m;i++)//求最小公倍数lcm
	{
		if(i%n==0 && i%m==0)
		{
			lcm=i;
			break;
		}
	}
	printf("LCM is %d, GCD is %d",lcm,gcd);
	return 0;
}
/*5.1求一批正整数的奇数和*/
#include<stdio.h>
int main(void)
{
	int sum=0,num;
	int even(int t);
	printf("Input integers: ");
	scanf("%d",&num);
	while(num>0)
	{
		if (even(num)==0) sum=sum+num;
		scanf("%d",&num);
	}
	printf("The sum of the odd numbers is %d",sum);
	return 0;
}

/*判断t是（1）否（0）为素数*/
int even(int t)
{
	if(t%2==0) return 1;
	else return 0;
}









/*5.2求两个正整数之间的素数个数及和*/
#include<stdio.h>
int main(void)
{
	int m,n,count=0,sum=0,i;
	int prime(int t);
	printf("Input m: ");scanf("%d",&m);
	printf("Input n: ");scanf("%d",&n);
	for(i=m;i<=n;i++)
	{
		if(prime(i)==1) 
		{
			count++;
			sum=sum+i;
		}
	}
	printf("count=%d, sum=%d",count,sum);
	return 0;
}

/*判断t是（1）否（0）为素数*/
int prime(int t)
{
	int i,flag=-1;
	if (t<=1) return 0;
	for(i=2;i<=(t/2);i++)
	{
		if(t%i==0) 
		{flag=1;
		  break;
		}
	}
	if(flag==-1) return 1;
	else return 0;
}








/*5.3求一个整数中2的个数*/
#include<stdio.h>
int main(void)
{
	int count,num;
	int countdight(int number,int dight);
	printf("Enter an integer: ");scanf("%d",&num);
	count=countdight(num,2);
	printf("Number of digit 2: %d",count);
	return 0;
}

/*返回整数number中数字digit的个数*/
int countdight(int number,int dight)
{
	int num,count=0;
	while(number>0)
	{
		num=number%10;
		if(num==dight) count++;
		number=number/10;
	}
	return count;
}
/*5.4求两个正整数之间的水仙花数*/
#include<stdio.h>
int main(void)
{
	int m,n,i;
	int is(int t);
	printf("Input m: ");scanf("%d",&m);
	printf("Input n: ");scanf("%d",&n);
	for(i=m;i<=n;i++)
	{
		if(is(i)==1) printf("%d\n",i);
	}
	return 0;
}

/*判断abc是（1）否（0）为水仙花数*/
int is(int abc)
{
	int a,b,c;
	if(abc<100 || abc>999) return 0;
	a=abc/100;
	b=(abc/10)%10;
	c=abc%10;
	if(abc==a*a*a+b*b*b+c*c*c) return 1;
	else return 0;
}








/*5.5输出m ~n 之间的所有完数*/
#include<stdio.h>
int main(void)
{
	int m,n,i;
	int factorsum(int t);
	printf("Input m: ");scanf("%d",&m);
	printf("Input n: ");scanf("%d",&n);
	for(i=m;i<=n;i++)
	{
		if(i==factorsum(i)) printf("%5d",i);
	}
	return 0;
}

/*返回t的因子和*/
int factorsum(int t)
{
	int sum=0,i;
	if(t==1) sum=1;
    for(i=1;i<t;i++)
	{
		if(t%i==0) sum=sum+i;
	}
	return sum;
}

/*5.6输入2个整数，分别将其逆向输出*/
#include<stdio.h>
int main(void)
{
	int m1,m2;
	int fun(int t);
	printf("Input m1: ");scanf("%d",&m1);
	printf("Input m2: ");scanf("%d",&m2);
	printf("%d's reverse is: %d\n",m1,fun(m1));
    printf("%d's reverse is: %d",m2,fun(m2));
	return 0;
}

/*返回t的逆向值*/
int fun(int t)
{
	int flag=1,num=0;
	if(t<0) 
	{
		t=-t;
		flag=-1;
	}
	while(t>0)
	{
		num=num*10+t%10;
		t=t/10;
	}
	num=num*flag;
  	return num;
}



/*5.7输出m ~n 之间所有的Fibonacci 数*/
#include<stdio.h>
int main(void)
{
	int m,n,num,i;
	int fib(int t);
	printf("Input m: ");scanf("%d",&m);
	printf("Input n: ");scanf("%d",&n);
	num=1;i=1;
	while(num<=n)
	{
		if(num>=m && num <=n) printf("%d ",num);
		num=fib(i);
		i++;
	}
	return 0;
}

/*返回第n项Fibonacci 数*/
int fib(int n)
{
	int a=1,b=1,num,i;
	if(n==1 || n==2) return 1;
	for(i=3;i<=n;i++)
	{
		num=a+b;
		a=b;
		b=num;
	}
	return num;
}


















/*6.1数制转换*/
#include<stdio.h>
int main(void)
{
	int num;
	printf("Input a decimal: ");scanf("%d",&num);
	printf("The octal is %o\n",num);
	printf("The hexadecimal is %X",num);//以%x表示，输出的是小写字母，%X则为的大写
	return 0;
}

/*6.2从键盘输入3个整数，输出其中最大的数。 (要求使用条件表达式）*/
#include<stdio.h>
int main(void)
{
	int a,b,c,max;
	printf("Input 3 integers: ");scanf("%d %d %d",&a,&b,&c);
	max=(a>b)?a:b;
	max=(c>max)?c:max;
	printf("The maximum is: %d",max);
	return 0;
}
/*6.3统计一行字符中单词的个数*/
#include<stdio.h>
int main(void)
{
	char ch;
	int flag;//读入单词开关
	int count=0;;
	printf("Input words: ");
	flag=0;//读入单词开关关闭
	while((ch=getchar())!='\n')
	{
		if(flag==0 && (ch>='a' && ch<='z' || ch>='A' && ch<='Z')) 
		{
			flag=1;//读入单词开关打开
			count++;
		}
		if(flag==1 && !(ch>='a' && ch<='z' || ch>='A' && ch<='Z'))
		{
			flag=0;//读入单词开关关闭
		}
	}
	printf("count=%d",count);
	return 0;
}
/*6.4将一笔钱换算成1分、2分和5分的硬币组合*/
#include<stdio.h>
int main(void)
{
	int money,fen1,fen2,fen5,count=0;
	printf("Input money: ");scanf("%d",&money);
	for(fen5=1;fen5<=money/5;fen5++)
		for(fen2=money/2;fen2>=1;fen2--)
			for(fen1=money;fen1>=1;fen1--)
			{
				if (fen1+fen2*2+fen5*5==money)
				{
					printf("fen5: %d fen2: %d fen1: %d\n",fen5,fen2,fen1);
					count++;
				}
				
			}
	printf("count=%d",count);
	return 0;
}
/*7.1求一组整数的平均值*/
#include<stdio.h>
int main(void)
{
	int num[10],n,i,sum=0;
	double ave;
	printf("Input n: ");scanf("%d",&n);
	printf("Input %d integers: ",n);
	for(i=1;i<=n;i++) scanf("%d",&num[i-1]);
	for(i=1;i<=n;i++) sum+=num[i-1];
	ave=sum/(double)(n);
	printf("Average=%.2lf",ave);
	return 0;
}
/*7.10用对应字母替换字符串中的大写字母*/
#include<stdio.h>
int main(void)
{
	char string[81],ch;
	int i;
	char replace(char t);
	printf("Input a string: ");
	i=0;
	while(1)
	{
		ch=getchar();
		if(ch!='\n') 
		{
			string[i]=ch;
			i++;
		}
		else
		{
			string[i]='\0';
			break;
		}
	}
	i=0;
	while(1)
	{
		if(string[i]!='\0')
			string[i]=replace(string[i]);
		else break;
		i++;
	}
	printf("After replaced: %s",string);
	return 0;
}

/*返回字符t所对应得按照题目要求变换后的字符*/
char replace(char t)
{
	if(t>='A'&&t<='Z') return'Z'-(t-'A');
	else return t;
}
/*7.2求一组整数的最大值及其下标*/
#include<stdio.h>
int main(void)
{
	int num[10],n,i,max,index;
	printf("Input n: ");scanf("%d",&n);
	printf("Input %d integers: ",n);
	for(i=1;i<=n;i++) scanf("%d",&num[i-1]);
	max=num[0];index=0;
	for(i=1;i<n;i++) 
	if(num[i]>max) 
	{
		max=num[i];
		index=i;
	}
	printf("max=%d, index=%d",max,index);
	return 0;
}
/*7.3交换最大、最小值*/
#include<stdio.h>
int main(void)
{
	int num[10],n,i,max,maxindex,min,minindex;
	printf("Input n: ");scanf("%d",&n);
	printf("Input %d integers: ",n);
	for(i=1;i<=n;i++) scanf("%d",&num[i-1]);
	min=num[0];minindex=0;
	for(i=1;i<n;i++) 
	{
		if(num[i]<min) 
	    {
		min=num[i];
		minindex=i;
     	}
	}
	{
		int t;
		t=num[0];
		num[0]=num[minindex];
		num[minindex]=t;
	}
	max=num[0];maxindex=0;
	for(i=1;i<n;i++) 
	{
		if(num[i]>max) 
	    {
		max=num[i];
		maxindex=i;
     	}
	}
	{
		int t;
		t=num[n-1];
		num[n-1]=num[maxindex];
		num[maxindex]=t;
	}
	printf("After swapped: ");
	for(i=1;i<=n;i++) printf("%d ",num[i-1]);
	return 0;
}
/*7.4给一组整数排序*/
#include<stdio.h>
int main(void)
{
	int num[10],n,i,j;
	printf("Input n: ");scanf("%d",&n);
	printf("Input %d integers: ",n);
	for(i=1;i<=n;i++) scanf("%d",&num[i-1]);
	for(i=0;i<=n-1;i++)
		for(j=0;j<n-1-i;j++)
		{
			if(num[j]<num[j+1])
			{
				int t;
				t=num[j];
				num[j]=num[j+1];
				num[j+1]=t;
			}
		}
	printf("After sorted: ");
	for(i=0;i<=n-1;i++) printf("%d ",num[i]);
	return 0;
}
/*7.5计算矩阵中部分数据之和*/
#include<stdio.h>
int main(void)
{
	int matrix[100][100];
	int rank,i,j,sum=0;
	printf("Input n: ");scanf("%d",&rank);
	printf("Input array:\n");
	for(i=0;i<rank;i++)
		for(j=0;j<rank;j++)
			scanf("%d",&matrix[i][j]);
	for(i=0;i<rank;i++)
		for(j=0;j<rank;j++)
			if((i!=(rank-1))&&(j!=(rank-1))&&((i+j)!=rank-1)) sum+=matrix[i][j];
	printf("sum=%d",sum);
	return 0;
}
/*7.6判断是否为上三角矩阵*/
#include<stdio.h>
int main(void)
{
	int matrix[100][100];
	int rank,i,j,flag=1;
	printf("Input n: ");scanf("%d",&rank);
	printf("Input array:\n");
	for(i=0;i<rank;i++)
		for(j=0;j<rank;j++)
			scanf("%d",&matrix[i][j]);
	for(i=0;i<rank;i++)
		for(j=0;j<rank;j++)
			if((i>j)&&(matrix[i][j]!=0)) flag=0;
	if(flag==1) printf("YES");
	else printf("NO");
	return 0;
}
/*7.7输出某日期为该年的第几天*/
#include<stdio.h>
int main(void)
{
	int year,month,day,numberday=0,i;
    int days_of_month(int year, int month);
	printf("Input year, month, day: ");scanf("%d%d%d",&year,&month,&day);
	for(i=1;i<month;i++)
	{
		numberday+=days_of_month(year,i);
	}
	numberday+=day;
	printf("Days of year: %d",numberday);
	return 0;
}

/*返回第year年的第month月有多少天，出错返回0*/
int days_of_month(int year, int month)
{
	int if_leapyear(int t);
	switch(month)
	{
		case 1: case 3: case 5: case 7: case 8: case 10: case 12: 
			return 31;
		case 4: case 6: case 9: case 11: 
			return 30;
		case 2:
		{
			if (if_leapyear(year)) return 29;
			else return 28;
		}
	}
	return 0;
}

/*判断第t年是(1)否(0)是闰年*/
int if_leapyear(int t)
{
	if (t%400==0) return 1;
	if (t%4==0&&t%100!=0) return 1;
	return 0;
}
/*7.8在字符串中查找某字符*/
#include<stdio.h>
int main(void)
{
	char string[81],ch,aimch;
	int index,aimindex=-1;
	printf("Input a character: ");scanf("%c",&aimch);
	getchar();//消除输入aimch值结束时所按回车键的影响
	printf("Input a string: ");
	index=0;
	while(1)
	{
		ch=getchar();
		if(ch!='\n') 
		{
			string[index]=ch;
			index++;
		}
		else
		{
			string[index]='\0';
			break;
		}
	}
	index=0;
	while(1)
	{
		if(string[index]==aimch)
			aimindex=index;
		else
			if(string[index]=='\0')
				break;
		index++;
	}
	if(aimindex==-1) printf("Not Found");
	else
	printf("index=%d",aimindex);
	return 0;
}
/*7.9统计一组字符串中大写辅音字母的个数*/
#include<stdio.h>
int main(void)
{
	char string[81],ch;
	int i,count=0;
	printf("Input a string: ");
	i=0;
	while(1)
	{
		ch=getchar();
		if(ch!='\n') 
		{
			string[i]=ch;
			i++;
		}
		else
		{
			string[i]='\0';
			break;
		}
	}
	i=0;
	while(1)
	{
		ch=string[i];
		if(ch>='A'&&ch<='Z'&&ch!='A'&&ch!='E'&&ch!='I'&&ch!='O'&&ch!='U') count++;
		if(ch=='\0') break;
		i++;
	}
	printf("count=%d",count);
	return 0;
}
/*8.1指针变量作为函数参数，求两个整型数的和与差*/
#include<stdio.h>
void fun(int x,int y,int *pa,int *pb) ;
int main( void) 
{ 
    int a,b,add=0,sub=0;
    printf("Input a and b: ");
    scanf("%d%d",&a,&b); 
    fun(a,b,&add,&sub);
    printf("%d+%d=%d\n",a,b,add);
    printf("%d-%d=%d\n",a,b,sub);
    return 0; 
}

/*处理：将x+y赋予*pa，将a-b赋予*pb*/
void fun(int x,int y,int *pa,int *pb)
{
	*pa=x+y;
	*pb=x-y;
}
/*8.2数组中查找指定元素*/
#include<stdio.h>
int search(int list[],int n,int x);
int main(void)
{
	int n,x,index,list[10],i;
	printf("Input n: ");scanf("%d",&n);
	printf("Input %d integers: ",n);
	for(i=0;i<n;i++) scanf("%d",&list[i]);
	printf("Input x: ");scanf("%d",&x);
	index=search(list,n,x);
	if(index!=-1) printf("index=%d",index);
	else printf("Not found");
	return 0;
}

/*返回元素x在数组list中的最小下标，若不存在返回-1*/
int search(int list[],int n,int x)
{
	int i;
	for(i=0;i<n;i++) if(list[i]==x) return i;
	return-1;
}
/*8.3输出其中最长的字符串*/
#include<stdio.h>
int main(void)
{
	char str[5][20];
	int i,maxlenth=-1,maxindex=-1;
	int lenth(char *p);
	printf("Input 5 strings: ");
	for(i=0;i<5;i++) scanf("%s",str[i]);
	for(i=0;i<5;i++) 
	{
		if(lenth(str[i])>maxlenth) 
		{
			maxlenth=lenth(str[i]);
			maxindex=i;
		}
	}
	printf("The longest is: %s",str[maxindex]);
	return 0;
}

/*返回指针p指向的字符串的长度（不含终止符）*/
int lenth(char *p)
{
	int count=0;
	while(*p!='\0')
	{
		count++;
		p++;
	}
	return count;
}
/*8.4自定义函数，删除字符串中的字符*/
#include<stdio.h>
int main(void)
{
	char ch,str[80];
	void delchar(char *str, char ch);
	printf("Input a string: ");gets(str);
	printf("Input a char: ");ch=getchar();
	delchar(str,ch);
	printf("After deleted, the string is: %s",str);
	return 0;
}

/*处理：删除字符串str中所有的字符ch*/
void delchar(char *str, char ch)
{
	void move(char *p);
	while(*str!='\0')
	{
		if(*str==ch) move(str);
		else str++;
	}
}

/*处理：将指针p指向的地址后所有数据前移一个地址，遇'\0'将其前移并停止*/
void move(char *p)
{
	while(*p!='\0')
	{
		*p=*(p+1);
		p++;
	}
	*p=*(p+1);
}
/*8.5定义函数strmcpy(s,t,m)，实现字符串复制*/
#include<stdio.h>
int main(void)
{
	void strmcpy(char *str1, char *str2, int n);
	char str1[80],str2[80];
	int n;
	printf("Input a string: ");gets(str2);
	printf("Input an integer: ");scanf("%d",&n);	
	strmcpy(str1,str2,n);
	printf("Output is: %s",str1);
	return 0;
}

/*处理：将字符串str2中从第n个字符(含)开始的全部字符复制到字符串str1中*/
void strmcpy(char *str1, char *str2, int n)
{
	char *p=NULL;
	p=str2+n-1;
	while(*p!='\0')
	{
		*str1=*p;
		str1++;
		p++;
	}
	*str1=*p;
}
/*8.6编程判断输入的一串字符是否为“回文”*/
#include<stdio.h>
int main(void)
{
	int lenth(char *p);
	char str[80];
	int a,b,flag=1;
	printf("Input a string: ");scanf("%s",str);
	a=0;b=lenth(str)-1;
	while(b-a>0)
	{
		if(str[a]!=str[b])
		{
			flag=0;
			break;
		}
		a++;
		b--;
	}
	if(flag) printf("YES");
	else printf("NO");
	return 0;
}

/*返回指针p指向的字符串的长度（不含终止符）*/
int lenth(char *p)
{
	int count=0;
	while(*p!='\0')
	{
		count++;
		p++;
	}
	return count;
}
/*8.7输出其中最大的字符串*/
#include<stdio.h>
#include<string.h>
int main(void)
{
	char str[5][80],maxstr[80];
	int i;
	puts("Input 5 strings:");//试试新函数的用法
	for(i=0;i<5;i++) scanf("%s",str[i]);
	strcpy(maxstr,str[0]);
	for(i=1;i<5;i++)
	{
		if(strcmp(maxstr,str[i])<0) strcpy(maxstr,str[i]);
	}
	printf("Max is:%s",maxstr);
	return 0;
}
/*8.8整数排序*/
#include<stdio.h>
int main(void)
{
	void sort(int *p, int lenth, int flag);
	int n, i, num[10],flag;
	char choice;
	printf("Input n: "); scanf("%d", &n);
	printf("Input %d integers: ", n);
	for (i = 0; i < n; i++) scanf("%d", &num[i]);
	getchar();//消除此前输入数据时结束符的影响
	printf("Input A or D: "); choice = getchar();
	if (choice == 'A') flag = 1;
	if (choice == 'D') flag = 0;
	sort(num, n, flag);
	printf("After sorted: ");
	for (i = 0; i < n; i++) printf("%d ", num[i]);
	return 0;
}

/*处理：给指针p指向的长度为lenth的整数数组排序，若flag为真从小到大排，否则从大往小排*/
void sort(int *p, int lenth, int flag)
{
	int *i, *j;
	if (flag)
	{
		for (i = p + lenth - 1; i >= p; i--)
			for (j = p; j < i; j++)
			{
			if (*j>*(j+1)) 
			{
				int t;
				t = *j;
				*j = *(j + 1);
				*(j + 1) = t;
			}
			}
	}
	else
	{
		for (i = p + lenth - 1; i >= p; i--)
			for (j = p; j < i; j++)
			{
			if (*j<*(j + 1))
			{
				int t;
				t = *j;
				*j = *(j + 1);
				*(j + 1) = t;
			}
			}
	}
}
/*9.1求复数之积*/
#include<stdio.h>
//定义复数结构
struct complex
{
	int real;
	int imaginary;
};
int main(void)
{
	struct complex multiply(struct complex a, struct complex b);
	void printcomplex(struct complex t);
	struct complex a, b, c;
	printf("Input a1, a2, b1, b2: ");
	scanf("%d%d%d%d", &a.real, &a.imaginary, &b.real, &b.imaginary);
	c = multiply(a, b);
	printf("("); printcomplex(a); printf(")*");
	printf("("); printcomplex(b); printf(")=");
	printcomplex(c);
	return 0;
}

/*返回复数a和复数b的乘积*/
struct complex multiply(struct complex a, struct complex b)
{
	struct complex result;
	result.real = a.real*b.real - a.imaginary*b.imaginary;
	result.imaginary = a.real*b.imaginary + b.real*a.imaginary;
	return result;
}

/*处理:打印复数t*/
void printcomplex(struct complex t)
{
	printf("%d", t.real);
	if (t.imaginary < 0) printf("%di", t.imaginary);
	else printf("+%di", t.imaginary);
}/*9.2通讯录排序*/
#include<stdio.h>
//定义个人信息结构
struct information
{
	char name[20];
	int birthday;
	char number[20];

};
int main(void)
{
	void sort(struct information *p,int n);
	struct information book[10];
	int n,i;
	printf("Input n: "); scanf("%d", &n);
	for (i = 0; i < n; i++)
	{ 
		printf("Input the name, birthday, number of the %d friend: ", i+1);
		scanf("%s%d%s", &book[i].name, &book[i].birthday, &book[i].number);
	}
	sort(book,n);
	for (i = 0; i < n; i++)
	{
		printf("%s %d %s\n", book[i].name, book[i].birthday, book[i].number);
	}
	return 0;
}

/*处理：给指针p指向的长度为n的information类型数组
根据information.birthday的数值从小到大排序*/
void sort(struct information *p,int n)
{
	struct information *i, *j;
	for (i = p; i < p + n-1; i++)
		for (j = i; j < p + n-1; j++)
		if ((*j).birthday > (*(j + 1)).birthday)
		{
			struct information temp;
			temp = *j;
			*j = *(j + 1);
			*(j + 1) = temp;
		}
}